name: CI

on:
  push:
    paths:
      - 'audio-visual-script-repo/**'
      - '.github/workflows/ci.yml'
  pull_request:
    paths:
      - 'audio-visual-script-repo/**'
      - '.github/workflows/ci.yml'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            audio-visual-script-repo/package-lock.json

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: audio-visual-script-repo/python/requirements.txt

      - name: Install Node dependencies
        working-directory: audio-visual-script-repo
        run: npm ci

      - name: Install Python dependencies
        working-directory: audio-visual-script-repo
        run: pip install -r python/requirements.txt

      - name: Lint backend
        working-directory: audio-visual-script-repo
        run: npm run lint --workspace backend

      - name: Type-check backend
        working-directory: audio-visual-script-repo
        run: npm run type-check --workspace backend

      - name: Lint frontend
        working-directory: audio-visual-script-repo
        run: npm run lint --workspace frontend

      - name: Type-check frontend
        working-directory: audio-visual-script-repo
        run: npm run type-check --workspace frontend

      - name: Build backend
        working-directory: audio-visual-script-repo
        run: npm run build --workspace backend

      - name: Build frontend
        working-directory: audio-visual-script-repo
        run: npm run build --workspace frontend

      - name: Run Python tests
        working-directory: audio-visual-script-repo
        run: pytest python
